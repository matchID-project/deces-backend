# this docker configuation is the run flavor (static)

services:
  backend:
    image: ${DOCKER_USERNAME}/deces-backend:${APP_VERSION}
    container_name: deces-backend
    build:
      context: ${BACKEND}
      target: ${EXEC_ENV}
      dockerfile: Dockerfile
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
        npm_registry: ${NPM_REGISTRY}
        npm_ssl: ${NPM_SSL}
        MIRROR_DEBIAN: ${MIRROR_DEBIAN}
        app_path: /${APP}
        app_name: ${APP}
        app_ver: ${APP_VERSION}
        port: ${BACKEND_PORT}
        NPM_FIX: ${NPM_FIX}
        NPM_LATEST: ${NPM_LATEST}
        NPM_VERBOSE: ${NPM_VERBOSE}
    environment:
      - NODE_ENV=${EXEC_ENV}
      - BACKEND_PORT=${BACKEND_PORT}
      - APP=${APP}
      - APP_VERSION=${APP_VERSION}
      - APP_DNS=${APP_DNS}
      - APP_URL=${APP_URL}
      - BACKEND_PROXY_PATH=${BACKEND_PROXY_PATH}
      - BACKEND_JOB_CONCURRENCY=${BACKEND_JOB_CONCURRENCY}
      - BACKEND_CHUNK_CONCURRENCY=${BACKEND_CHUNK_CONCURRENCY}
      - BACKEND_LOG_LEVEL=${BACKEND_LOG_LEVEL}
      - BACKEND_LOG_TIMER=${BACKEND_LOG_TIMER}
      - BACKEND_TOKEN_KEY=${BACKEND_TOKEN_KEY}
      - BACKEND_TOKEN_USER=${BACKEND_TOKEN_USER}
      - BACKEND_TOKEN_PASSWORD=${BACKEND_TOKEN_PASSWORD}
      - BACKEND_TMP_MAX=${BACKEND_TMP_MAX}
      - BACKEND_TMP_DURATION=${BACKEND_TMP_DURATION}
      - BACKEND_TMP_WINDOW=${BACKEND_TMP_WINDOW}
      - BACKEND_TMPFILE_PERSISTENCE=${BACKEND_TMPFILE_PERSISTENCE}
      - SMTP_TLS_SELFSIGNED=${SMTP_TLS_SELFSIGNED}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PWD=${SMTP_PWD}
      - API_URL=${API_URL}
      - API_SSL=${API_SSL}
      - API_EMAIL=${API_EMAIL}
      - DATAGOUV_CATALOG_URL=${DATAGOUV_CATALOG_URL}
      - DATAGOUV_RESOURCES_URL=${DATAGOUV_RESOURCES_URL}
      - DATAGOUV_PROXY_PATH=${DATAGOUV_PROXY_PATH}
      - ES_URL=${ES_HOST}:${ES_PORT}
      - ES_INDEX=${ES_INDEX}
      - COMMUNES_JSON=data/communes.json
      - DISPOSABLE_MAIL=data/disposable-mail.txt
      - DB_JSON=data/userDB.json
      - PROOFS=data/proofs
      - JOBS=data/jobs
      - WIKIDATA_LINKS=data/wikidata.json
    volumes:
      - ${PROOFS}:/${APP}/data/proofs
      - ${JOBS}:/${APP}/data/jobs
    restart: always
    depends_on:
      - "redis"
  redis:
    image: redis:alpine
    container_name: ${APP}-redis
    volumes:
      - ${REDIS_DATA}:/data
    healthcheck:
      test: ["CMD-SHELL", "(redis-cli --raw incr ping) && (redis-cli ping | grep -q PONG)"]
      interval: 1m
      timeout: 10s
      retries: 3


networks:
  default:
    external:
      name: ${DC_NETWORK}
